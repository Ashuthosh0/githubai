{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/app/%28protected%29/dashboard/commit-log.tsx"],"sourcesContent":["'use client'\r\nimport UseProject from '@/hooks/use-project'\r\nimport { api } from '@/trpc/react'\r\nimport { ExternalLink } from 'lucide-react'\r\nimport Link from 'next/link'\r\nimport React from 'react'\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst CommitLog = () => {\r\n  const { projectId, project } = UseProject()\r\n  const { data: commits } = api.project.getCommits.useQuery({ projectId })\r\n\r\n  return (\r\n    <ul className=\"space-y-6\">\r\n      {commits?.map((commit, commitIdx) => (\r\n        <li key={commit.id} className=\"relative flex gap-x-4\">\r\n          <div\r\n            className={cn(\r\n              'absolute left-0 top-0 flex w-6 justify-center',\r\n              commitIdx === commits.length - 1 ? 'h-6' : '-bottom-6'\r\n            )}\r\n          >\r\n            <div className=\"w-px translate-x-1 bg-gray-200\" />\r\n          </div>\r\n\r\n          <div className=\"flex flex-col\">\r\n            <img\r\n              src={commit.commitAuthorAvatar}\r\n              alt=\"commit avatar\"\r\n              className=\"relative mt-4 size-8 flex-none rounded-full bg-gray-50\"\r\n            />\r\n\r\n            <div className=\"flex justify-between gap-x-4\">\r\n              <Link\r\n                target=\"_blank\"\r\n                href={`${project?.githubUrl}/commits/${commit.commitHash}`}\r\n                className=\"py-0.5 text-xs leading-5 text-gray-500\"\r\n              >\r\n                {commit.commitMessage}\r\n                <span className=\"inline-flex items-center ml-2\">\r\n                  {commit.commitAuthorName}\r\n                  <span className=\"ml-1\">committed</span>\r\n                  <ExternalLink className=\"ml-1 size-4\" />\r\n                </span>\r\n              </Link>\r\n            </div>\r\n            <span className=\"font-semibold\">{commit.commitMessage}</span>\r\n            <pre className=\"mt-2 whitespace-pre-wrap text-sm leading-6 text-gray-500\">\r\n              {commit.summary}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default CommitLog\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAEA;AANA;;;;;;;AAQA,MAAM,YAAY;IAChB,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAU,AAAD;IACxC,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,qHAAA,CAAA,MAAG,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC;QAAE;IAAU;IAEtE,qBACE,8OAAC;QAAG,WAAU;kBACX,SAAS,IAAI,CAAC,QAAQ,0BACrB,8OAAC;gBAAmB,WAAU;;kCAC5B,8OAAC;wBACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,cAAc,QAAQ,MAAM,GAAG,IAAI,QAAQ;kCAG7C,cAAA,8OAAC;4BAAI,WAAU;;;;;;;;;;;kCAGjB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,KAAK,OAAO,kBAAkB;gCAC9B,KAAI;gCACJ,WAAU;;;;;;0CAGZ,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCACH,QAAO;oCACP,MAAM,GAAG,SAAS,UAAU,SAAS,EAAE,OAAO,UAAU,EAAE;oCAC1D,WAAU;;wCAET,OAAO,aAAa;sDACrB,8OAAC;4CAAK,WAAU;;gDACb,OAAO,gBAAgB;8DACxB,8OAAC;oDAAK,WAAU;8DAAO;;;;;;8DACvB,8OAAC,sNAAA,CAAA,eAAY;oDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;0CAI9B,8OAAC;gCAAK,WAAU;0CAAiB,OAAO,aAAa;;;;;;0CACrD,8OAAC;gCAAI,WAAU;0CACZ,OAAO,OAAO;;;;;;;;;;;;;eAjCZ,OAAO,EAAE;;;;;;;;;;AAwC1B;uCAEe","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/app/%28protected%29/dashboard/actions.ts"],"sourcesContent":["// 'use server'\r\n\r\n// import { generateEmbedding } from \"@/lib/gemini\"\r\n\r\n// import {streamText} from 'ai'\r\n// import {createStreamableValue} from 'ai/rsc'\r\n// import {createGoogleGenerativeAI} from '@ai-sdk/google'\r\n// import { db } from \"@/server/db\"\r\n\r\n\r\n// const google = createGoogleGenerativeAI({\r\n//   apiKey : process.env.GEMINI_API_KEY,\r\n// })\r\n\r\n// export async function askQuestion(question :string ,projectId : string) {\r\n//   const stream = createStreamableValue()\r\n//   const queryVector = await generateEmbedding(question)\r\n//   const vectorQuery = `[${queryVector.join(',')}]`\r\n\r\n//   const result = await db.$queryRaw`\r\n//   SELECT \"fileName\" , \"sourceCode\" , \"summary\",\r\n//   1- (\"summaryEmbedding\" <=> ${vectorQuery} :: vector) AS similarity\r\n//   FROM \"SourceCodeEmbedding\"\r\n//   WHERE  1- (\"summaryEmbedding\" <=> ${vectorQuery} :: vector) > 0.5\r\n//   AND \"projectId\" = ${projectId}\r\n//   ORDER BY similarity DESC \r\n//   LIMIT 10\r\n//   ` as {fileName : string; sourceCode: string; summary:string} []\r\n\r\n//   let context ='';\r\n\r\n//   for (const doc of result){\r\n//     context += `source ${doc.fileName}\\ncode content : ${doc.sourceCode} \\n summary of file: ${doc.summary} \\n\\n`\r\n//   }\r\n//    (async () =>{\r\n//     const { textStream } = await streamText({\r\n\r\n//       model : google('gemini-1.5-flash'),\r\n//       prompt:`\r\n//       You are a ai code assistant who answers questions about the codebase. Your target audience is a technical intern w\r\n//     AI assistant is a brand new, powerful, human-like artificial intelligence.\r\n// The traits of AI include expert knowledge, helpfulness, cleverness, and articulateness.\r\n// AI is a well-behaved and well-mannered individual.\r\n// AI is always friendly, kind, and inspiring, and he is eager to provide vivid and thoughtful responses to the user.\r\n// AI has the sum of all knowledge in their brain, and is able to accurately answer nearly any question about any topic in\r\n// If the question is asking about code or a specific file, AI will provide the detailed answer, giving step by step instr\r\n// START CONTEXT BLOCK\r\n// ${context}\r\n// END OF CONTEXT BLOCK\r\n// START QUESTION\r\n// ${question}\r\n// END OF QUESTION\r\n// AI assistant will take into account any CONTEXT BLOCK that is provided in a conversation.\r\n// If the context does not provide the answer to the question, the AI assistant will say, \"I'm sorry, but I don't have enough information to answer that based on the provided context.\"\r\n// AI assistant will not apologize for previous responses, but instead will indicate when new information would be helpful.\r\n// AI assistant will not invent anything that is not drawn directly from the context.\r\n// Answer in markdown syntax, with code snippets if needed. Be as detailed as possible when answering technical questions. `\r\n//     });\r\n\r\n//   for await(const delta of textStream){\r\n//       console.log(\"Delta chunk:\", delta);\r\n//       stream.update(delta)\r\n//     }\r\n//     stream.done()\r\n//   })()\r\n\r\n//   return {\r\n//     output : stream.value,\r\n//     fileReferences : result\r\n//   }\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n'use server'\r\n\r\nimport { generateEmbedding } from \"@/lib/gemini\"\r\nimport { streamText } from 'ai'\r\nimport { createStreamableValue } from 'ai/rsc'\r\nimport { createGoogleGenerativeAI } from '@ai-sdk/google'\r\nimport { db } from \"@/server/db\"\r\n\r\nconst google = createGoogleGenerativeAI({\r\n  apiKey: process.env.GEMINI_API,\r\n})\r\n\r\nexport async function askQuestion(question: string, projectId: string) {\r\n  console.log(`[askQuestion] Invoked with question: \"${question}\" | projectId: ${projectId}`)\r\n\r\n  const stream = createStreamableValue()\r\n  console.log(`[askQuestion] Initialized streamable value.`)\r\n\r\n  const queryVector = await generateEmbedding(question)\r\n  console.log(`[askQuestion] Generated query vector embedding. Vector length: ${queryVector.length}`)\r\n\r\n  const vectorQuery = `[${queryVector.join(',')}]`\r\n  console.log(`[askQuestion] Vector prepared for SQL query.`)\r\n\r\n  console.time('[askQuestion] Vector DB Query Time')\r\n  const result = await db.$queryRaw`\r\n    SELECT \"fileName\", \"sourceCode\", \"summary\",\r\n    1 - (\"summaryEmbedding\" <=> ${vectorQuery} :: vector) AS similarity\r\n    FROM \"SourceCodeEmbedding\"\r\n    WHERE 1 - (\"summaryEmbedding\" <=> ${vectorQuery} :: vector) > 0.5\r\n    AND \"projectId\" = ${projectId}\r\n    ORDER BY similarity DESC\r\n    LIMIT 10\r\n  ` as { fileName: string; sourceCode: string; summary: string }[]\r\n  console.timeEnd('[askQuestion] Vector DB Query Time')\r\n  console.log(`[askQuestion] Retrieved ${result.length} context files.`)\r\n\r\n  let context = ''\r\n  result.forEach((doc, index) => {\r\n    context += `source ${doc.fileName}\\ncode content : ${doc.sourceCode} \\n summary of file: ${doc.summary} \\n\\n`\r\n    console.log(`[askQuestion] Context doc[${index}] => fileName: ${doc.fileName}, sourceCode.length: ${doc.sourceCode.length}, summary.length: ${doc.summary.length}`)\r\n  })\r\n\r\n  console.log(`[askQuestion] Constructed context block. Total length: ${context.length}`)\r\n\r\n  ;(async () => {\r\n    console.log(`[askQuestion] Starting Gemini streamText call...`)\r\n    const { textStream } = await streamText({\r\n      model: google('gemini-1.5-flash'),\r\n      prompt: `\r\nYou are an AI code assistant who answers questions about the codebase. Your target audience is a technical intern.\r\nAI assistant is a brand new, powerful, human-like artificial intelligence.\r\nThe traits of AI include expert knowledge, helpfulness, cleverness, and articulateness.\r\nAI is a well-behaved and well-mannered individual.\r\nAI is always friendly, kind, and inspiring, and is eager to provide vivid and thoughtful responses to the user.\r\nAI has the sum of all knowledge in their brain, and is able to accurately answer nearly any question about any topic.\r\nIf the question is asking about code or a specific file, AI will provide a detailed answer, giving step-by-step instructions.\r\nSTART CONTEXT BLOCK\r\n${context}\r\nEND OF CONTEXT BLOCK\r\nSTART QUESTION\r\n${question}\r\nEND OF QUESTION\r\nAI assistant will take into account any CONTEXT BLOCK that is provided in a conversation.\r\nIf the context does not provide the answer to the question, the AI assistant will say, \"I'm sorry, but I don't have enough information to answer that based on the provided context.\"\r\nAI assistant will not apologize for previous responses, but instead will indicate when new information would be helpful.\r\nAI assistant will not invent anything that is not drawn directly from the context.\r\nAnswer in markdown syntax, with code snippets if needed. Be as detailed as possible when answering technical questions.\r\n      `,\r\n    })\r\n\r\n    console.log(`[askQuestion] Gemini stream started.`)\r\n    let chunkCount = 0\r\n    for await (const delta of textStream) {\r\n      chunkCount++\r\n      console.log(`[askQuestion] Delta chunk [${chunkCount}]:`, delta)\r\n      stream.update(delta)\r\n    }\r\n    stream.done()\r\n    console.log(`[askQuestion] Streaming completed. Total chunks received: ${chunkCount}`)\r\n  })()\r\n\r\n  console.log(`[askQuestion] Returning stream and file references to caller.`)\r\n\r\n  return {\r\n    output: stream.value, // not stream.value!\r\n    fileReferences: result,\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;IAwFsB,cAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/app/%28protected%29/dashboard/ask-question-card.tsx"],"sourcesContent":["'use client'\r\nimport MDEditor from '@uiw/react-md-editor'\r\nimport React from 'react'\r\nimport { Card, CardContent, CardTitle, CardHeader } from '@/components/ui/card'\r\nimport { Textarea } from '@/components/ui/textarea'\r\nimport UseProject from '@/hooks/use-project'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog'\r\nimport Image from 'next/image'\r\nimport { askQuestion } from './actions'\r\nimport { readStreamableValue } from 'ai/rsc'\r\nimport CodeReferences from './code-references'\r\n\r\nconst AskQuestionCard = () => {\r\n  const { project } = UseProject()\r\n  const [open, setOpen] = React.useState(false)\r\n  const [question, setQuestion] = React.useState('')\r\n  const [loading , setLoading] = React.useState(false)\r\n  const [answer , setAnswer] = React.useState('')\r\n  const [fileReferences , setFilesReferences] = React.useState<{ fileName :string ; sourceCode :string; summary:string }[]>([])\r\n\r\n\r\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    setAnswer('');\r\n    setFilesReferences([]);\r\n    e.preventDefault()\r\n    if (!project?.id) return\r\n\r\n    setLoading(true)\r\n    \r\n\r\n    try {\r\n      const { output, fileReferences } = await askQuestion(question, project.id)\r\n      setOpen(true)\r\n      setFilesReferences(fileReferences)\r\n\r\n      for await (const delta of readStreamableValue(output)) {\r\n        if (delta) {\r\n          console.log('Delta:', delta);\r\n          setAnswer((ans) => ans + delta)\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error while asking question:', err)\r\n      setAnswer('An error occurred while getting the answer.')\r\n    }\r\n    setLoading(false)\r\n  }\r\n  return (\r\n    <>\r\n      <Dialog open={open} onOpenChange={setOpen}>\r\n        <DialogContent className =\"sm:max-w-[80vw]\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2\">\r\n              <Image src=\"/logo.png\" alt=\"githubai\" width={40} height={40} />\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n          <MDEditor.Markdown source = {answer} className =\"max-w-[70vw] !h-full max-h-[40vh] overflow-scroll\"/>\r\n          <div className =\"h-4\" ></div>\r\n          <CodeReferences filesReferences={fileReferences}/>\r\n\r\n        <Button type ='button' onClick={() => setOpen(false)}>close</Button>\r\n          {fileReferences.map(file =>{\r\n            return <span key = {file.fileName}>{file.fileName}</span>\r\n          })}\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Card className=\"relative col-span-3\">\r\n        <CardHeader>\r\n          <CardTitle>Ask a question</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <form onSubmit={onSubmit}>\r\n            <Textarea\r\n              placeholder=\"Explain the codebase\"\r\n              value={question}\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n            />\r\n            <div className=\"h-4\" />\r\n            <Button type=\"submit\" disabled ={loading}>Ask the AI</Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AskQuestionCard\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;;;;;;;;;;AAaA,MAAM,kBAAkB;IACtB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAU,AAAD;IAC7B,MAAM,CAAC,MAAM,QAAQ,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAC/C,MAAM,CAAC,SAAU,WAAW,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAC9C,MAAM,CAAC,QAAS,UAAU,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAC5C,MAAM,CAAC,gBAAiB,mBAAmB,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAA8D,EAAE;IAG5H,MAAM,WAAW,OAAO;QACtB,UAAU;QACV,mBAAmB,EAAE;QACrB,EAAE,cAAc;QAChB,IAAI,CAAC,SAAS,IAAI;QAElB,WAAW;QAGX,IAAI;YACF,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG,MAAM,CAAA,GAAA,gLAAA,CAAA,cAAW,AAAD,EAAE,UAAU,QAAQ,EAAE;YACzE,QAAQ;YACR,mBAAmB;YAEnB,WAAW,MAAM,SAAS,CAAA,GAAA,mJAAA,CAAA,sBAAmB,AAAD,EAAE,QAAS;gBACrD,IAAI,OAAO;oBACT,QAAQ,GAAG,CAAC,UAAU;oBACtB,UAAU,CAAC,MAAQ,MAAM;gBAC3B;YACF;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,UAAU;QACZ;QACA,WAAW;IACb;IACA,qBACE;;0BACE,8OAAC,kIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAM,cAAc;0BAChC,cAAA,8OAAC,kIAAA,CAAA,gBAAa;oBAAC,WAAW;;sCACxB,8OAAC,kIAAA,CAAA,eAAY;sCACX,cAAA,8OAAC,kIAAA,CAAA,cAAW;gCAAC,WAAU;0CACrB,cAAA,8OAAC,6HAAA,CAAA,UAAK;oCAAC,KAAI;oCAAY,KAAI;oCAAW,OAAO;oCAAI,QAAQ;;;;;;;;;;;;;;;;sCAG7D,8OAAC,8KAAA,CAAA,UAAQ,CAAC,QAAQ;4BAAC,QAAU;4BAAQ,WAAW;;;;;;sCAChD,8OAAC;4BAAI,WAAW;;;;;;sCAChB,8OAAC,+JAAA,CAAA,UAAc;4BAAC,iBAAiB;;;;;;sCAEnC,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAM;4BAAS,SAAS,IAAM,QAAQ;sCAAQ;;;;;;wBACnD,eAAe,GAAG,CAAC,CAAA;4BAClB,qBAAO,8OAAC;0CAA4B,KAAK,QAAQ;+BAA7B,KAAK,QAAQ;;;;;wBACnC;;;;;;;;;;;;0BAIJ,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC,gIAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;kCAEb,8OAAC,gIAAA,CAAA,cAAW;kCACV,cAAA,8OAAC;4BAAK,UAAU;;8CACd,8OAAC,oIAAA,CAAA,WAAQ;oCACP,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;8CAE7C,8OAAC;oCAAI,WAAU;;;;;;8CACf,8OAAC,kIAAA,CAAA,SAAM;oCAAC,MAAK;oCAAS,UAAW;8CAAS;;;;;;;;;;;;;;;;;;;;;;;;;AAMtD;uCAEe","debugId":null}},
    {"offset": {"line": 751, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/app/%28protected%29/dashboard/page.tsx"],"sourcesContent":["'use client'\r\nimport { useUser } from '@clerk/nextjs'\r\nimport React from 'react'\r\nimport UseProject from '@/hooks/use-project'\r\nimport { Github } from 'lucide-react'\r\nimport Link from 'next/link'\r\nimport CommitLog from './commit-log'\r\nimport AskQuestionCard from './ask-question-card'\r\n\r\nconst DashboardPage = () => {\r\n  const { project } = UseProject()\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between flex-wrap gap-y-4\">\r\n        <div className=\"w-fit rounded bg-primary px-4 py-3\">\r\n          <div className=\"flex items-center\">\r\n            <Github className=\"w-5 h-5 text-white\" />\r\n            <div className=\"ml-2\">\r\n              <p className=\"text-sm font-medium text-white\">\r\n                This project is linked to{' '}\r\n                <Link\r\n                  href={project?.githubUrl ?? ''}\r\n                  className=\"text-white/80 hover:underline\"\r\n                >\r\n                  {project?.githubUrl}\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className = 'h-4'></div>\r\n\r\n        <div className =\"flex items-center gap-4\">\r\n          TeamMembers\r\n          InviteBUtton\r\n          ArchiveBUtton\r\n        </div>\r\n      </div>\r\n\r\n      <div  className = \"mt-4\">\r\n        <div className = \"grid grid-cold-1 gap-4 sm:grid-cols-5\">\r\n          <AskQuestionCard/>\r\n          MeetingsCard \r\n        </div>\r\n      </div>\r\n      <div className = \"mt-8\"></div>\r\n      <CommitLog/>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashboardPage\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AAPA;;;;;;;AASA,MAAM,gBAAgB;IACpB,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAU,AAAD;IAC7B,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;8CAClB,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAE,WAAU;;4CAAiC;4CAClB;0DAC1B,8OAAC,4JAAA,CAAA,UAAI;gDACH,MAAM,SAAS,aAAa;gDAC5B,WAAU;0DAET,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAMpB,8OAAC;wBAAI,WAAY;;;;;;kCAEjB,8OAAC;wBAAI,WAAW;kCAA0B;;;;;;;;;;;;0BAO5C,8OAAC;gBAAK,WAAY;0BAChB,cAAA,8OAAC;oBAAI,WAAY;;sCACf,8OAAC,oKAAA,CAAA,UAAe;;;;;wBAAE;;;;;;;;;;;;0BAItB,8OAAC;gBAAI,WAAY;;;;;;0BACjB,8OAAC,0JAAA,CAAA,UAAS;;;;;;;;;;;AAKhB;uCAEe","debugId":null}}]
}