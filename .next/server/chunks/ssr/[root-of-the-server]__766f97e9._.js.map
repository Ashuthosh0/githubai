{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_31c89cc1.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_31c89cc1-module__hy39Qq__className\",\n  \"variable\": \"geist_31c89cc1-module__hy39Qq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_31c89cc1.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-geist-sans%22}],%22variableName%22:%22geist%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/trpc/react.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TRPCReactProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TRPCReactProvider() from the server but TRPCReactProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx <module evaluation>\",\n    \"TRPCReactProvider\",\n);\nexport const api = registerClientReference(\n    function() { throw new Error(\"Attempted to call api() from the server but api is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx <module evaluation>\",\n    \"api\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oDACA;AAEG,MAAM,MAAM,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,oDACA","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/trpc/react.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TRPCReactProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TRPCReactProvider() from the server but TRPCReactProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx\",\n    \"TRPCReactProvider\",\n);\nexport const api = registerClientReference(\n    function() { throw new Error(\"Attempted to call api() from the server but api is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/trpc/react.tsx\",\n    \"api\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gCACA;AAEG,MAAM,MAAM,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,gCACA","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/components/ui/RazorpayScriptLoader.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/ui/RazorpayScriptLoader.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/RazorpayScriptLoader.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8S,GAC3U,4EACA","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/components/ui/RazorpayScriptLoader.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/ui/RazorpayScriptLoader.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/RazorpayScriptLoader.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/PVGAR/Documents/githubAI/githubai/src/app/layout.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\r\n\r\nimport { type Metadata } from \"next\";\r\nimport { Geist } from \"next/font/google\";\r\nimport {ClerkProvider} from \"@clerk/nextjs\"\r\nimport { TRPCReactProvider } from \"@/trpc/react\";\r\nimport RazorpayScriptLoader from \"@/components/ui/RazorpayScriptLoader\";\r\nimport { Toaster } from \"sonner\";\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"githubai\",\r\n  description: \"Generated by create-t3-app\",\r\n  icons: [{ rel: \"icon\", url: \"/favicon.ico\" }],\r\n};\r\n\r\nconst geist = Geist({\r\n  subsets: [\"latin\"],\r\n  variable: \"--font-geist-sans\",\r\n});\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: Readonly<{ children: React.ReactNode }>) {\r\n  return (\r\n      <html lang=\"en\" className={`${geist.variable}`}>\r\n        <ClerkProvider>\r\n          <body>\r\n              <TRPCReactProvider>{children}</TRPCReactProvider>\r\n              <Toaster richColors />\r\n              <RazorpayScriptLoader />\r\n          </body>\r\n        </ClerkProvider>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;AAIA;AACA;AACA;AACA;;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,OAAO;QAAC;YAAE,KAAK;YAAQ,KAAK;QAAe;KAAE;AAC/C;AAOe,SAAS,WAAW,EACjC,QAAQ,EACgC;IACxC,qBACI,8OAAC;QAAK,MAAK;QAAK,WAAW,GAAG,yIAAA,CAAA,UAAK,CAAC,QAAQ,EAAE;kBAC5C,cAAA,8OAAC,yKAAA,CAAA,gBAAa;sBACZ,cAAA,8OAAC;;kCACG,8OAAC,qHAAA,CAAA,oBAAiB;kCAAE;;;;;;kCACpB,8OAAC,wIAAA,CAAA,UAAO;wBAAC,UAAU;;;;;;kCACnB,8OAAC,gJAAA,CAAA,UAAoB;;;;;;;;;;;;;;;;;;;;;AAKnC","debugId":null}}]
}